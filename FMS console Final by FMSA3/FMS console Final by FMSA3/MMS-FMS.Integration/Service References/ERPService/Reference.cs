//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMS_FMS.Integration.ERPService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppException", Namespace="http://schemas.datacontract.org/2004/07/IIITS.ERP.BL")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MMS_FMS.Integration.ERPService.clsUser))]
    public partial class AppException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsUser", Namespace="http://schemas.datacontract.org/2004/07/IIITS.ERP.BL")]
    [System.SerializableAttribute()]
    public partial class clsUser : MMS_FMS.Integration.ERPService.AppException {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USR_ACTDCTONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USR_ACTDCTREMARKSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USR_ANSWERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int USR_COMPIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int USR_CRBYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int USR_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USR_PSWDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USR_ProfileImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USR_QUESTIONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int crbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usrQuestionToBindField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((this.DesignationField.Equals(value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNo {
            get {
                return this.MobileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNoField, value) != true)) {
                    this.MobileNoField = value;
                    this.RaisePropertyChanged("MobileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USR_ACTDCTON {
            get {
                return this.USR_ACTDCTONField;
            }
            set {
                if ((object.ReferenceEquals(this.USR_ACTDCTONField, value) != true)) {
                    this.USR_ACTDCTONField = value;
                    this.RaisePropertyChanged("USR_ACTDCTON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USR_ACTDCTREMARKS {
            get {
                return this.USR_ACTDCTREMARKSField;
            }
            set {
                if ((object.ReferenceEquals(this.USR_ACTDCTREMARKSField, value) != true)) {
                    this.USR_ACTDCTREMARKSField = value;
                    this.RaisePropertyChanged("USR_ACTDCTREMARKS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USR_ANSWER {
            get {
                return this.USR_ANSWERField;
            }
            set {
                if ((object.ReferenceEquals(this.USR_ANSWERField, value) != true)) {
                    this.USR_ANSWERField = value;
                    this.RaisePropertyChanged("USR_ANSWER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int USR_COMPID {
            get {
                return this.USR_COMPIDField;
            }
            set {
                if ((this.USR_COMPIDField.Equals(value) != true)) {
                    this.USR_COMPIDField = value;
                    this.RaisePropertyChanged("USR_COMPID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int USR_CRBY {
            get {
                return this.USR_CRBYField;
            }
            set {
                if ((this.USR_CRBYField.Equals(value) != true)) {
                    this.USR_CRBYField = value;
                    this.RaisePropertyChanged("USR_CRBY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int USR_ID {
            get {
                return this.USR_IDField;
            }
            set {
                if ((this.USR_IDField.Equals(value) != true)) {
                    this.USR_IDField = value;
                    this.RaisePropertyChanged("USR_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USR_PSWD {
            get {
                return this.USR_PSWDField;
            }
            set {
                if ((object.ReferenceEquals(this.USR_PSWDField, value) != true)) {
                    this.USR_PSWDField = value;
                    this.RaisePropertyChanged("USR_PSWD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USR_ProfileImage {
            get {
                return this.USR_ProfileImageField;
            }
            set {
                if ((object.ReferenceEquals(this.USR_ProfileImageField, value) != true)) {
                    this.USR_ProfileImageField = value;
                    this.RaisePropertyChanged("USR_ProfileImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USR_QUESTION {
            get {
                return this.USR_QUESTIONField;
            }
            set {
                if ((object.ReferenceEquals(this.USR_QUESTIONField, value) != true)) {
                    this.USR_QUESTIONField = value;
                    this.RaisePropertyChanged("USR_QUESTION");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int crby {
            get {
                return this.crbyField;
            }
            set {
                if ((this.crbyField.Equals(value) != true)) {
                    this.crbyField = value;
                    this.RaisePropertyChanged("crby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string usrQuestionToBind {
            get {
                return this.usrQuestionToBindField;
            }
            set {
                if ((object.ReferenceEquals(this.usrQuestionToBindField, value) != true)) {
                    this.usrQuestionToBindField = value;
                    this.RaisePropertyChanged("usrQuestionToBind");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/IIITS.ERPService")]
    [System.SerializableAttribute()]
    public partial class MyException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sExceptionMsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sExceptionMsg {
            get {
                return this.sExceptionMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.sExceptionMsgField, value) != true)) {
                    this.sExceptionMsgField = value;
                    this.RaisePropertyChanged("sExceptionMsg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/IIITS.ERPService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ERPService.IERPService")]
    public interface IERPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UserCreate", ReplyAction="http://tempuri.org/IERPService/UserCreateResponse")]
        string UserCreate(MMS_FMS.Integration.ERPService.clsUser objUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UserCreate", ReplyAction="http://tempuri.org/IERPService/UserCreateResponse")]
        System.Threading.Tasks.Task<string> UserCreateAsync(MMS_FMS.Integration.ERPService.clsUser objUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/EmployeeMasterSave", ReplyAction="http://tempuri.org/IERPService/EmployeeMasterSaveResponse")]
        string EmployeeMasterSave(string EmployeeDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/EmployeeMasterSave", ReplyAction="http://tempuri.org/IERPService/EmployeeMasterSaveResponse")]
        System.Threading.Tasks.Task<string> EmployeeMasterSaveAsync(string EmployeeDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateJVFailureStatus", ReplyAction="http://tempuri.org/IERPService/UpdateJVFailureStatusResponse")]
        void UpdateJVFailureStatus(string JTM_TransID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateJVFailureStatus", ReplyAction="http://tempuri.org/IERPService/UpdateJVFailureStatusResponse")]
        System.Threading.Tasks.Task UpdateJVFailureStatusAsync(string JTM_TransID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPurchaseOrderDetails", ReplyAction="http://tempuri.org/IERPService/GetPurchaseOrderDetailsResponse")]
        System.Data.DataTable GetPurchaseOrderDetails(string AccessCode, string VendorId, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPurchaseOrderDetails", ReplyAction="http://tempuri.org/IERPService/GetPurchaseOrderDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPurchaseOrderDetailsAsync(string AccessCode, string VendorId, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CreateJVTransaction", ReplyAction="http://tempuri.org/IERPService/CreateJVTransactionResponse")]
        string[] CreateJVTransaction(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CreateJVTransaction", ReplyAction="http://tempuri.org/IERPService/CreateJVTransactionResponse")]
        System.Threading.Tasks.Task<string[]> CreateJVTransactionAsync(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/ValidateJVCreation", ReplyAction="http://tempuri.org/IERPService/ValidateJVCreationResponse")]
        string[] ValidateJVCreation(string AccessCode, string DebitAccountCode, string CreditAccountCode, double TotalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/ValidateJVCreation", ReplyAction="http://tempuri.org/IERPService/ValidateJVCreationResponse")]
        System.Threading.Tasks.Task<string[]> ValidateJVCreationAsync(string AccessCode, string DebitAccountCode, string CreditAccountCode, double TotalAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWorkorderAccountValid", ReplyAction="http://tempuri.org/IERPService/GetWorkorderAccountValidResponse")]
        string GetWorkorderAccountValid(string AccessCode, string LocationCode, string WorkorderNumber, string AccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWorkorderAccountValid", ReplyAction="http://tempuri.org/IERPService/GetWorkorderAccountValidResponse")]
        System.Threading.Tasks.Task<string> GetWorkorderAccountValidAsync(string AccessCode, string LocationCode, string WorkorderNumber, string AccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetSanctionedstatus", ReplyAction="http://tempuri.org/IERPService/GetSanctionedstatusResponse")]
        string GetSanctionedstatus(string EstimateNo, string autoreferencenumber, string officecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetSanctionedstatus", ReplyAction="http://tempuri.org/IERPService/GetSanctionedstatusResponse")]
        System.Threading.Tasks.Task<string> GetSanctionedstatusAsync(string EstimateNo, string autoreferencenumber, string officecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsLocation", ReplyAction="http://tempuri.org/IERPService/GetWODetailsLocationResponse")]
        string GetWODetailsLocation(string WorkorderNumber, string AccountCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsLocation", ReplyAction="http://tempuri.org/IERPService/GetWODetailsLocationResponse")]
        System.Threading.Tasks.Task<string> GetWODetailsLocationAsync(string WorkorderNumber, string AccountCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAutoreferencetrms", ReplyAction="http://tempuri.org/IERPService/GetAutoreferencetrmsResponse")]
        System.Data.DataSet GetAutoreferencetrms(string AccessCode, string officecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAutoreferencetrms", ReplyAction="http://tempuri.org/IERPService/GetAutoreferencetrmsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAutoreferencetrmsAsync(string AccessCode, string officecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/FetchBudgetAmountForAccountCode", ReplyAction="http://tempuri.org/IERPService/FetchBudgetAmountForAccountCodeResponse")]
        string FetchBudgetAmountForAccountCode(string AccessCode, string LocationCode, string AccountCode, string Date, string formname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/FetchBudgetAmountForAccountCode", ReplyAction="http://tempuri.org/IERPService/FetchBudgetAmountForAccountCodeResponse")]
        System.Threading.Tasks.Task<string> FetchBudgetAmountForAccountCodeAsync(string AccessCode, string LocationCode, string AccountCode, string Date, string formname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWorkOrderDetails", ReplyAction="http://tempuri.org/IERPService/GetWorkOrderDetailsResponse")]
        System.Data.DataSet GetWorkOrderDetails(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWorkOrderDetails", ReplyAction="http://tempuri.org/IERPService/GetWorkOrderDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWorkOrderDetailsAsync(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetEstimateDetailsCRDone", ReplyAction="http://tempuri.org/IERPService/GetEstimateDetailsCRDoneResponse")]
        System.Data.DataSet GetEstimateDetailsCRDone(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetEstimateDetailsCRDone", ReplyAction="http://tempuri.org/IERPService/GetEstimateDetailsCRDoneResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEstimateDetailsCRDoneAsync(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/SendestimateDetailstoTrms", ReplyAction="http://tempuri.org/IERPService/SendestimateDetailstoTrmsResponse")]
        string SendestimateDetailstoTrms(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/SendestimateDetailstoTrms", ReplyAction="http://tempuri.org/IERPService/SendestimateDetailstoTrmsResponse")]
        System.Threading.Tasks.Task<string> SendestimateDetailstoTrmsAsync(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/Applicationdet", ReplyAction="http://tempuri.org/IERPService/ApplicationdetResponse")]
        System.Data.DataSet Applicationdet(string autoreferencenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/Applicationdet", ReplyAction="http://tempuri.org/IERPService/ApplicationdetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ApplicationdetAsync(string autoreferencenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/TrmsConnection", ReplyAction="http://tempuri.org/IERPService/TrmsConnectionResponse")]
        System.Data.DataSet TrmsConnection(string applicantrefid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/TrmsConnection", ReplyAction="http://tempuri.org/IERPService/TrmsConnectionResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> TrmsConnectionAsync(string applicantrefid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/Savecrcomplete", ReplyAction="http://tempuri.org/IERPService/SavecrcompleteResponse")]
        string Savecrcomplete(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/Savecrcomplete", ReplyAction="http://tempuri.org/IERPService/SavecrcompleteResponse")]
        System.Threading.Tasks.Task<string> SavecrcompleteAsync(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateJVSuccessStatus", ReplyAction="http://tempuri.org/IERPService/UpdateJVSuccessStatusResponse")]
        string[] UpdateJVSuccessStatus(string AccessCode, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateJVSuccessStatus", ReplyAction="http://tempuri.org/IERPService/UpdateJVSuccessStatusResponse")]
        System.Threading.Tasks.Task<string[]> UpdateJVSuccessStatusAsync(string AccessCode, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/workorderwisebookedrpt", ReplyAction="http://tempuri.org/IERPService/workorderwisebookedrptResponse")]
        System.Data.DataSet workorderwisebookedrpt(string fromdate, string todate, string divisionoff, string locationcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/workorderwisebookedrpt", ReplyAction="http://tempuri.org/IERPService/workorderwisebookedrptResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> workorderwisebookedrptAsync(string fromdate, string todate, string divisionoff, string locationcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetails", ReplyAction="http://tempuri.org/IERPService/GetWODetailsResponse")]
        System.Data.DataTable GetWODetails(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetails", ReplyAction="http://tempuri.org/IERPService/GetWODetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetWODetailsAsync(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsForCRegister", ReplyAction="http://tempuri.org/IERPService/GetWODetailsForCRegisterResponse")]
        System.Data.DataTable GetWODetailsForCRegister(string AccessCode, string LocationCode, string AccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsForCRegister", ReplyAction="http://tempuri.org/IERPService/GetWODetailsForCRegisterResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetWODetailsForCRegisterAsync(string AccessCode, string LocationCode, string AccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPurchaseOrderNumber", ReplyAction="http://tempuri.org/IERPService/GetPurchaseOrderNumberResponse")]
        System.Data.DataSet GetPurchaseOrderNumber(string AccessCode, int VendorId, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPurchaseOrderNumber", ReplyAction="http://tempuri.org/IERPService/GetPurchaseOrderNumberResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPurchaseOrderNumberAsync(string AccessCode, int VendorId, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetRvNumber", ReplyAction="http://tempuri.org/IERPService/GetRvNumberResponse")]
        System.Data.DataSet GetRvNumber(string AccessCode, int PurchaseorderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetRvNumber", ReplyAction="http://tempuri.org/IERPService/GetRvNumberResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRvNumberAsync(string AccessCode, int PurchaseorderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPoRVnumbers", ReplyAction="http://tempuri.org/IERPService/GetPoRVnumbersResponse")]
        System.Data.DataSet GetPoRVnumbers(string AccessCode, int VendorId, string LocationCode, int billid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPoRVnumbers", ReplyAction="http://tempuri.org/IERPService/GetPoRVnumbersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPoRVnumbersAsync(string AccessCode, int VendorId, string LocationCode, int billid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/FetchRvdetails", ReplyAction="http://tempuri.org/IERPService/FetchRvdetailsResponse")]
        System.Data.DataSet FetchRvdetails(string AccessCode, int PurchaseorderId, string rv_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/FetchRvdetails", ReplyAction="http://tempuri.org/IERPService/FetchRvdetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchRvdetailsAsync(string AccessCode, int PurchaseorderId, string rv_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/SaveRvBill", ReplyAction="http://tempuri.org/IERPService/SaveRvBillResponse")]
        string[] SaveRvBill(string AccessCode, string jsonerializeddata, string bill_id, string poid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/SaveRvBill", ReplyAction="http://tempuri.org/IERPService/SaveRvBillResponse")]
        System.Threading.Tasks.Task<string[]> SaveRvBillAsync(string AccessCode, string jsonerializeddata, string bill_id, string poid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWOItemDetails", ReplyAction="http://tempuri.org/IERPService/GetWOItemDetailsResponse")]
        System.Data.DataTable GetWOItemDetails(string AccessCode, string LocationCode, int WOId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWOItemDetails", ReplyAction="http://tempuri.org/IERPService/GetWOItemDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetWOItemDetailsAsync(string AccessCode, string LocationCode, int WOId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetCollectionSource", ReplyAction="http://tempuri.org/IERPService/GetCollectionSourceResponse")]
        System.Data.DataTable GetCollectionSource(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetCollectionSource", ReplyAction="http://tempuri.org/IERPService/GetCollectionSourceResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCollectionSourceAsync(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAccountCodeFromERP", ReplyAction="http://tempuri.org/IERPService/GetAccountCodeFromERPResponse")]
        System.Data.DataTable GetAccountCodeFromERP(string AccessCode, int LocCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAccountCodeFromERP", ReplyAction="http://tempuri.org/IERPService/GetAccountCodeFromERPResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAccountCodeFromERPAsync(string AccessCode, int LocCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure22AB", ReplyAction="http://tempuri.org/IERPService/GetAnnexure22ABResponse")]
        System.Data.DataSet GetAnnexure22AB(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure22AB", ReplyAction="http://tempuri.org/IERPService/GetAnnexure22ABResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure22ABAsync(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure22ABCircle", ReplyAction="http://tempuri.org/IERPService/GetAnnexure22ABCircleResponse")]
        System.Data.DataSet GetAnnexure22ABCircle(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure22ABCircle", ReplyAction="http://tempuri.org/IERPService/GetAnnexure22ABCircleResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure22ABCircleAsync(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure40A", ReplyAction="http://tempuri.org/IERPService/GetAnnexure40AResponse")]
        System.Data.DataSet GetAnnexure40A(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure40A", ReplyAction="http://tempuri.org/IERPService/GetAnnexure40AResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure40AAsync(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure40B", ReplyAction="http://tempuri.org/IERPService/GetAnnexure40BResponse")]
        System.Data.DataSet GetAnnexure40B(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure40B", ReplyAction="http://tempuri.org/IERPService/GetAnnexure40BResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure40BAsync(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure30A", ReplyAction="http://tempuri.org/IERPService/GetAnnexure30AResponse")]
        System.Data.DataSet GetAnnexure30A(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure30A", ReplyAction="http://tempuri.org/IERPService/GetAnnexure30AResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure30AAsync(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure30", ReplyAction="http://tempuri.org/IERPService/GetAnnexure30Response")]
        System.Data.DataSet GetAnnexure30(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAnnexure30", ReplyAction="http://tempuri.org/IERPService/GetAnnexure30Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure30Async(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/TransferWork", ReplyAction="http://tempuri.org/IERPService/TransferWorkResponse")]
        System.Data.DataTable TransferWork(string AccessCode, string LocCode, string AccountCode, string ActivityCode, string TransferDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/TransferWork", ReplyAction="http://tempuri.org/IERPService/TransferWorkResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> TransferWorkAsync(string AccessCode, string LocCode, string AccountCode, string ActivityCode, string TransferDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetBudgetAccountCode", ReplyAction="http://tempuri.org/IERPService/GetBudgetAccountCodeResponse")]
        System.Data.DataSet GetBudgetAccountCode(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetBudgetAccountCode", ReplyAction="http://tempuri.org/IERPService/GetBudgetAccountCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBudgetAccountCodeAsync(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetSchemes", ReplyAction="http://tempuri.org/IERPService/GetSchemesResponse")]
        System.Data.DataTable GetSchemes(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetSchemes", ReplyAction="http://tempuri.org/IERPService/GetSchemesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSchemesAsync(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetProjects", ReplyAction="http://tempuri.org/IERPService/GetProjectsResponse")]
        System.Data.DataTable GetProjects(string AccessCode, int LocationCode, int SchemeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetProjects", ReplyAction="http://tempuri.org/IERPService/GetProjectsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProjectsAsync(string AccessCode, int LocationCode, int SchemeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetActivityCode", ReplyAction="http://tempuri.org/IERPService/GetActivityCodeResponse")]
        System.Data.DataTable GetActivityCode(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetActivityCode", ReplyAction="http://tempuri.org/IERPService/GetActivityCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetActivityCodeAsync(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetVendor", ReplyAction="http://tempuri.org/IERPService/GetVendorResponse")]
        System.Data.DataTable GetVendor(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetVendor", ReplyAction="http://tempuri.org/IERPService/GetVendorResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetVendorAsync(string AccessCode, int LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetLCBGRefID", ReplyAction="http://tempuri.org/IERPService/GetLCBGRefIDResponse")]
        System.Data.DataTable GetLCBGRefID(string AccessCode, int LocationCode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetLCBGRefID", ReplyAction="http://tempuri.org/IERPService/GetLCBGRefIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLCBGRefIDAsync(string AccessCode, int LocationCode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetInsurenceRefID", ReplyAction="http://tempuri.org/IERPService/GetInsurenceRefIDResponse")]
        System.Data.DataTable GetInsurenceRefID(string AccessCode, int LocationCode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetInsurenceRefID", ReplyAction="http://tempuri.org/IERPService/GetInsurenceRefIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetInsurenceRefIDAsync(string AccessCode, int LocationCode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetLCBGInsurenceRefID", ReplyAction="http://tempuri.org/IERPService/GetLCBGInsurenceRefIDResponse")]
        System.Data.DataTable GetLCBGInsurenceRefID(string AccessCode, int LocationCode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetLCBGInsurenceRefID", ReplyAction="http://tempuri.org/IERPService/GetLCBGInsurenceRefIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetLCBGInsurenceRefIDAsync(string AccessCode, int LocationCode, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAccountCodeAndActivityCode", ReplyAction="http://tempuri.org/IERPService/GetAccountCodeAndActivityCodeResponse")]
        System.Data.DataSet GetAccountCodeAndActivityCode(string AccessCode, int LocCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAccountCodeAndActivityCode", ReplyAction="http://tempuri.org/IERPService/GetAccountCodeAndActivityCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountCodeAndActivityCodeAsync(string AccessCode, int LocCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetMasterForEstimate", ReplyAction="http://tempuri.org/IERPService/GetMasterForEstimateResponse")]
        System.Data.DataSet GetMasterForEstimate(string AccessCode, int LocationCode, string sKey, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetMasterForEstimate", ReplyAction="http://tempuri.org/IERPService/GetMasterForEstimateResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetMasterForEstimateAsync(string AccessCode, int LocationCode, string sKey, int VendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckForBudgetLimit", ReplyAction="http://tempuri.org/IERPService/CheckForBudgetLimitResponse")]
        bool CheckForBudgetLimit(string AccessCode, int LocationCode, string AccountCode, int ActivityCode, double Amount, string TransDate, int SchemeId, int ProjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckForBudgetLimit", ReplyAction="http://tempuri.org/IERPService/CheckForBudgetLimitResponse")]
        System.Threading.Tasks.Task<bool> CheckForBudgetLimitAsync(string AccessCode, int LocationCode, string AccountCode, int ActivityCode, double Amount, string TransDate, int SchemeId, int ProjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetFMSUserDetail", ReplyAction="http://tempuri.org/IERPService/GetFMSUserDetailResponse")]
        System.Data.DataTable GetFMSUserDetail(string UserName, string UserPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetFMSUserDetail", ReplyAction="http://tempuri.org/IERPService/GetFMSUserDetailResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFMSUserDetailAsync(string UserName, string UserPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsAfterCR", ReplyAction="http://tempuri.org/IERPService/GetWODetailsAfterCRResponse")]
        System.Data.DataSet GetWODetailsAfterCR(string AccessCode, string LocationCode, int WOId, string FromDate, string AccountCode, string ToDate, string WONo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsAfterCR", ReplyAction="http://tempuri.org/IERPService/GetWODetailsAfterCRResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWODetailsAfterCRAsync(string AccessCode, string LocationCode, int WOId, string FromDate, string AccountCode, string ToDate, string WONo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPOItemDetails", ReplyAction="http://tempuri.org/IERPService/GetPOItemDetailsResponse")]
        System.Data.DataTable GetPOItemDetails(string AccessCode, string LocationCode, int iPurchaseOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetPOItemDetails", ReplyAction="http://tempuri.org/IERPService/GetPOItemDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPOItemDetailsAsync(string AccessCode, string LocationCode, int iPurchaseOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetItemDetails", ReplyAction="http://tempuri.org/IERPService/GetItemDetailsResponse")]
        System.Data.DataTable GetItemDetails(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetItemDetails", ReplyAction="http://tempuri.org/IERPService/GetItemDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetItemDetailsAsync(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsForCRegisterAbstract", ReplyAction="http://tempuri.org/IERPService/GetWODetailsForCRegisterAbstractResponse")]
        System.Data.DataTable GetWODetailsForCRegisterAbstract(string AccessCode, string LocationCode, int WOId, string FromDate, string ToDate, string AccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsForCRegisterAbstract", ReplyAction="http://tempuri.org/IERPService/GetWODetailsForCRegisterAbstractResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetWODetailsForCRegisterAbstractAsync(string AccessCode, string LocationCode, int WOId, string FromDate, string ToDate, string AccountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODataForCWIPReport", ReplyAction="http://tempuri.org/IERPService/GetWODataForCWIPReportResponse")]
        System.Data.DataSet GetWODataForCWIPReport(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODataForCWIPReport", ReplyAction="http://tempuri.org/IERPService/GetWODataForCWIPReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWODataForCWIPReportAsync(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsForReports", ReplyAction="http://tempuri.org/IERPService/GetWODetailsForReportsResponse")]
        System.Data.DataSet GetWODetailsForReports(string AccessCode, string LocationCode, string AccountCode, string Wonumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODetailsForReports", ReplyAction="http://tempuri.org/IERPService/GetWODetailsForReportsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWODetailsForReportsAsync(string AccessCode, string LocationCode, string AccountCode, string Wonumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWOAfterCR", ReplyAction="http://tempuri.org/IERPService/GetWOAfterCRResponse")]
        System.Data.DataSet GetWOAfterCR(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWOAfterCR", ReplyAction="http://tempuri.org/IERPService/GetWOAfterCRResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWOAfterCRAsync(string AccessCode, string LocationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckReleaseEntry", ReplyAction="http://tempuri.org/IERPService/CheckReleaseEntryResponse")]
        string[] CheckReleaseEntry(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckReleaseEntry", ReplyAction="http://tempuri.org/IERPService/CheckReleaseEntryResponse")]
        System.Threading.Tasks.Task<string[]> CheckReleaseEntryAsync(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetReturnedDownValues", ReplyAction="http://tempuri.org/IERPService/GetReturnedDownValuesResponse")]
        System.Data.DataTable GetReturnedDownValues(string AccessCode, string LocationCode, int RIId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetReturnedDownValues", ReplyAction="http://tempuri.org/IERPService/GetReturnedDownValuesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetReturnedDownValuesAsync(string AccessCode, string LocationCode, int RIId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckSpillOverWork", ReplyAction="http://tempuri.org/IERPService/CheckSpillOverWorkResponse")]
        string[] CheckSpillOverWork(string wo_no, string wo_date, int locationcode, double amount, string source, string key, string acccode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckSpillOverWork", ReplyAction="http://tempuri.org/IERPService/CheckSpillOverWorkResponse")]
        System.Threading.Tasks.Task<string[]> CheckSpillOverWorkAsync(string wo_no, string wo_date, int locationcode, double amount, string source, string key, string acccode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetReleaseQty", ReplyAction="http://tempuri.org/IERPService/GetReleaseQtyResponse")]
        string GetReleaseQty(string AccessCode, string LocationCode, int RIId, string ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetReleaseQty", ReplyAction="http://tempuri.org/IERPService/GetReleaseQtyResponse")]
        System.Threading.Tasks.Task<string> GetReleaseQtyAsync(string AccessCode, string LocationCode, int RIId, string ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateAssetReleaseStatus", ReplyAction="http://tempuri.org/IERPService/UpdateAssetReleaseStatusResponse")]
        string[] UpdateAssetReleaseStatus(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateAssetReleaseStatus", ReplyAction="http://tempuri.org/IERPService/UpdateAssetReleaseStatusResponse")]
        System.Threading.Tasks.Task<string[]> UpdateAssetReleaseStatusAsync(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/RejectJVTransaction", ReplyAction="http://tempuri.org/IERPService/RejectJVTransactionResponse")]
        string[] RejectJVTransaction(int MMSTransId, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/RejectJVTransaction", ReplyAction="http://tempuri.org/IERPService/RejectJVTransactionResponse")]
        System.Threading.Tasks.Task<string[]> RejectJVTransactionAsync(int MMSTransId, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/SaveWDVValuesinMMS", ReplyAction="http://tempuri.org/IERPService/SaveWDVValuesinMMSResponse")]
        string[] SaveWDVValuesinMMS(string AccessCode, string AccountCode, string AccontCodeDesc, string ActivityCode, string BalanceType, int RIId, double WDVValue, string TransType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/SaveWDVValuesinMMS", ReplyAction="http://tempuri.org/IERPService/SaveWDVValuesinMMSResponse")]
        System.Threading.Tasks.Task<string[]> SaveWDVValuesinMMSAsync(string AccessCode, string AccountCode, string AccontCodeDesc, string ActivityCode, string BalanceType, int RIId, double WDVValue, string TransType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetCrstatusDetails", ReplyAction="http://tempuri.org/IERPService/GetCrstatusDetailsResponse")]
        System.Data.DataTable GetCrstatusDetails(string AccessCode, string LocationCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetCrstatusDetails", ReplyAction="http://tempuri.org/IERPService/GetCrstatusDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetCrstatusDetailsAsync(string AccessCode, string LocationCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckOBMMSWorkOrderExist", ReplyAction="http://tempuri.org/IERPService/CheckOBMMSWorkOrderExistResponse")]
        bool CheckOBMMSWorkOrderExist(string AccessCode, int LocationCode, string WorkOrderNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckOBMMSWorkOrderExist", ReplyAction="http://tempuri.org/IERPService/CheckOBMMSWorkOrderExistResponse")]
        System.Threading.Tasks.Task<bool> CheckOBMMSWorkOrderExistAsync(string AccessCode, int LocationCode, string WorkOrderNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/BillRegisterSave", ReplyAction="http://tempuri.org/IERPService/BillRegisterSaveResponse")]
        string[] BillRegisterSave(
                    int BR_LocCode, 
                    string BR_Date, 
                    string BR_ManualBRNo, 
                    string BR_Narration, 
                    string jvnaration, 
                    string BR_ManualBRDate, 
                    string BR_BillCategory, 
                    int BR_BillType, 
                    string BR_BudgetACCode, 
                    double BR_BasicBill_Amount, 
                    double BR_Total_BillAmount, 
                    double BR_Net_BillAmount, 
                    string BR_JVDetails, 
                    int Bill_ID, 
                    System.Data.DataTable dtEmployeeDetails, 
                    string JVType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/BillRegisterSave", ReplyAction="http://tempuri.org/IERPService/BillRegisterSaveResponse")]
        System.Threading.Tasks.Task<string[]> BillRegisterSaveAsync(
                    int BR_LocCode, 
                    string BR_Date, 
                    string BR_ManualBRNo, 
                    string BR_Narration, 
                    string jvnaration, 
                    string BR_ManualBRDate, 
                    string BR_BillCategory, 
                    int BR_BillType, 
                    string BR_BudgetACCode, 
                    double BR_BasicBill_Amount, 
                    double BR_Total_BillAmount, 
                    double BR_Net_BillAmount, 
                    string BR_JVDetails, 
                    int Bill_ID, 
                    System.Data.DataTable dtEmployeeDetails, 
                    string JVType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWoInvoiceDetails", ReplyAction="http://tempuri.org/IERPService/GetWoInvoiceDetailsResponse")]
        System.Data.DataSet GetWoInvoiceDetails(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWoInvoiceDetails", ReplyAction="http://tempuri.org/IERPService/GetWoInvoiceDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWoInvoiceDetailsAsync(string AccessCode, string LocCode, string FromDate, string ToDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/HRMSAutoCashEntrySave", ReplyAction="http://tempuri.org/IERPService/HRMSAutoCashEntrySaveResponse")]
        string[] HRMSAutoCashEntrySave(string DispersementDetails, string CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/HRMSAutoCashEntrySave", ReplyAction="http://tempuri.org/IERPService/HRMSAutoCashEntrySaveResponse")]
        System.Threading.Tasks.Task<string[]> HRMSAutoCashEntrySaveAsync(string DispersementDetails, string CreatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAssetAccountCodes", ReplyAction="http://tempuri.org/IERPService/GetAssetAccountCodesResponse")]
        System.Data.DataTable GetAssetAccountCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetAssetAccountCodes", ReplyAction="http://tempuri.org/IERPService/GetAssetAccountCodesResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAssetAccountCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/TTKWorkorderSave", ReplyAction="http://tempuri.org/IERPService/TTKWorkorderSaveResponse")]
        string[] TTKWorkorderSave(string AccessCode, string LocationCode, string OfficeCode, int WorkInspectionID, int Crby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/TTKWorkorderSave", ReplyAction="http://tempuri.org/IERPService/TTKWorkorderSaveResponse")]
        System.Threading.Tasks.Task<string[]> TTKWorkorderSaveAsync(string AccessCode, string LocationCode, string OfficeCode, int WorkInspectionID, int Crby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/FetchWorkDetails", ReplyAction="http://tempuri.org/IERPService/FetchWorkDetailsResponse")]
        string FetchWorkDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/FetchWorkDetails", ReplyAction="http://tempuri.org/IERPService/FetchWorkDetailsResponse")]
        System.Threading.Tasks.Task<string> FetchWorkDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckFaultContract", ReplyAction="http://tempuri.org/IERPService/CheckFaultContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MMS_FMS.Integration.ERPService.MyException), Action="http://tempuri.org/IERPService/CheckFaultContractMyExceptionFault", Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/IIITS.ERPService")]
        string CheckFaultContract(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CheckFaultContract", ReplyAction="http://tempuri.org/IERPService/CheckFaultContractResponse")]
        System.Threading.Tasks.Task<string> CheckFaultContractAsync(string msg);
        
        // CODEGEN: Generating message contract since the wrapper name (UserLogin) of message UserLogin does not match the default value (LoginUser)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/LoginUser", ReplyAction="http://tempuri.org/IERPService/LoginUserResponse")]
        MMS_FMS.Integration.ERPService.UserLoginSuccess LoginUser(MMS_FMS.Integration.ERPService.UserLogin request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/LoginUser", ReplyAction="http://tempuri.org/IERPService/LoginUserResponse")]
        System.Threading.Tasks.Task<MMS_FMS.Integration.ERPService.UserLoginSuccess> LoginUserAsync(MMS_FMS.Integration.ERPService.UserLogin request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODataForCWIPSummaryReport", ReplyAction="http://tempuri.org/IERPService/GetWODataForCWIPSummaryReportResponse")]
        System.Data.DataSet GetWODataForCWIPSummaryReport(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/GetWODataForCWIPSummaryReport", ReplyAction="http://tempuri.org/IERPService/GetWODataForCWIPSummaryReportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetWODataForCWIPSummaryReportAsync(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateATDetials", ReplyAction="http://tempuri.org/IERPService/UpdateATDetialsResponse")]
        string[] UpdateATDetials(string AccessCode, string LocationCode, string BRID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/UpdateATDetials", ReplyAction="http://tempuri.org/IERPService/UpdateATDetialsResponse")]
        System.Threading.Tasks.Task<string[]> UpdateATDetialsAsync(string AccessCode, string LocationCode, string BRID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CreateJVTransactionCWIPTransfer", ReplyAction="http://tempuri.org/IERPService/CreateJVTransactionCWIPTransferResponse")]
        string[] CreateJVTransactionCWIPTransfer(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IERPService/CreateJVTransactionCWIPTransfer", ReplyAction="http://tempuri.org/IERPService/CreateJVTransactionCWIPTransferResponse")]
        System.Threading.Tasks.Task<string[]> CreateJVTransactionCWIPTransferAsync(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserLogin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserLogin {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UserName;
        
        public UserLogin() {
        }
        
        public UserLogin(string Token, string UserName) {
            this.Token = Token;
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UserLoginSuccess", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UserLoginSuccess {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public MMS_FMS.Integration.ERPService.User User;
        
        public UserLoginSuccess() {
        }
        
        public UserLoginSuccess(MMS_FMS.Integration.ERPService.User User) {
            this.User = User;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IERPServiceChannel : MMS_FMS.Integration.ERPService.IERPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ERPServiceClient : System.ServiceModel.ClientBase<MMS_FMS.Integration.ERPService.IERPService>, MMS_FMS.Integration.ERPService.IERPService {
        
        public ERPServiceClient() {
        }
        
        public ERPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ERPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ERPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ERPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string UserCreate(MMS_FMS.Integration.ERPService.clsUser objUser) {
            return base.Channel.UserCreate(objUser);
        }
        
        public System.Threading.Tasks.Task<string> UserCreateAsync(MMS_FMS.Integration.ERPService.clsUser objUser) {
            return base.Channel.UserCreateAsync(objUser);
        }
        
        public string EmployeeMasterSave(string EmployeeDetails) {
            return base.Channel.EmployeeMasterSave(EmployeeDetails);
        }
        
        public System.Threading.Tasks.Task<string> EmployeeMasterSaveAsync(string EmployeeDetails) {
            return base.Channel.EmployeeMasterSaveAsync(EmployeeDetails);
        }
        
        public void UpdateJVFailureStatus(string JTM_TransID) {
            base.Channel.UpdateJVFailureStatus(JTM_TransID);
        }
        
        public System.Threading.Tasks.Task UpdateJVFailureStatusAsync(string JTM_TransID) {
            return base.Channel.UpdateJVFailureStatusAsync(JTM_TransID);
        }
        
        public System.Data.DataTable GetPurchaseOrderDetails(string AccessCode, string VendorId, string LocationCode) {
            return base.Channel.GetPurchaseOrderDetails(AccessCode, VendorId, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPurchaseOrderDetailsAsync(string AccessCode, string VendorId, string LocationCode) {
            return base.Channel.GetPurchaseOrderDetailsAsync(AccessCode, VendorId, LocationCode);
        }
        
        public string[] CreateJVTransaction(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId) {
            return base.Channel.CreateJVTransaction(AccessCode, DebitAccountCode, CreditAccountCode, Amount, LocationCode, TransDate, Narration, SourceTransId, SourceDesc, JVTransId);
        }
        
        public System.Threading.Tasks.Task<string[]> CreateJVTransactionAsync(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId) {
            return base.Channel.CreateJVTransactionAsync(AccessCode, DebitAccountCode, CreditAccountCode, Amount, LocationCode, TransDate, Narration, SourceTransId, SourceDesc, JVTransId);
        }
        
        public string[] ValidateJVCreation(string AccessCode, string DebitAccountCode, string CreditAccountCode, double TotalAmount) {
            return base.Channel.ValidateJVCreation(AccessCode, DebitAccountCode, CreditAccountCode, TotalAmount);
        }
        
        public System.Threading.Tasks.Task<string[]> ValidateJVCreationAsync(string AccessCode, string DebitAccountCode, string CreditAccountCode, double TotalAmount) {
            return base.Channel.ValidateJVCreationAsync(AccessCode, DebitAccountCode, CreditAccountCode, TotalAmount);
        }
        
        public string GetWorkorderAccountValid(string AccessCode, string LocationCode, string WorkorderNumber, string AccountCode) {
            return base.Channel.GetWorkorderAccountValid(AccessCode, LocationCode, WorkorderNumber, AccountCode);
        }
        
        public System.Threading.Tasks.Task<string> GetWorkorderAccountValidAsync(string AccessCode, string LocationCode, string WorkorderNumber, string AccountCode) {
            return base.Channel.GetWorkorderAccountValidAsync(AccessCode, LocationCode, WorkorderNumber, AccountCode);
        }
        
        public string GetSanctionedstatus(string EstimateNo, string autoreferencenumber, string officecode) {
            return base.Channel.GetSanctionedstatus(EstimateNo, autoreferencenumber, officecode);
        }
        
        public System.Threading.Tasks.Task<string> GetSanctionedstatusAsync(string EstimateNo, string autoreferencenumber, string officecode) {
            return base.Channel.GetSanctionedstatusAsync(EstimateNo, autoreferencenumber, officecode);
        }
        
        public string GetWODetailsLocation(string WorkorderNumber, string AccountCode, int LocationCode) {
            return base.Channel.GetWODetailsLocation(WorkorderNumber, AccountCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<string> GetWODetailsLocationAsync(string WorkorderNumber, string AccountCode, int LocationCode) {
            return base.Channel.GetWODetailsLocationAsync(WorkorderNumber, AccountCode, LocationCode);
        }
        
        public System.Data.DataSet GetAutoreferencetrms(string AccessCode, string officecode) {
            return base.Channel.GetAutoreferencetrms(AccessCode, officecode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAutoreferencetrmsAsync(string AccessCode, string officecode) {
            return base.Channel.GetAutoreferencetrmsAsync(AccessCode, officecode);
        }
        
        public string FetchBudgetAmountForAccountCode(string AccessCode, string LocationCode, string AccountCode, string Date, string formname) {
            return base.Channel.FetchBudgetAmountForAccountCode(AccessCode, LocationCode, AccountCode, Date, formname);
        }
        
        public System.Threading.Tasks.Task<string> FetchBudgetAmountForAccountCodeAsync(string AccessCode, string LocationCode, string AccountCode, string Date, string formname) {
            return base.Channel.FetchBudgetAmountForAccountCodeAsync(AccessCode, LocationCode, AccountCode, Date, formname);
        }
        
        public System.Data.DataSet GetWorkOrderDetails(string AccessCode, string LocationCode) {
            return base.Channel.GetWorkOrderDetails(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWorkOrderDetailsAsync(string AccessCode, string LocationCode) {
            return base.Channel.GetWorkOrderDetailsAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataSet GetEstimateDetailsCRDone(string AccessCode, string LocationCode) {
            return base.Channel.GetEstimateDetailsCRDone(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEstimateDetailsCRDoneAsync(string AccessCode, string LocationCode) {
            return base.Channel.GetEstimateDetailsCRDoneAsync(AccessCode, LocationCode);
        }
        
        public string SendestimateDetailstoTrms(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc) {
            return base.Channel.SendestimateDetailstoTrms(AccessCode, EstimationAutogenerate, EstimateDate, TotalWorkOrderCost, autoreferencenumber, offcode, strLoggedUser, Wodesc);
        }
        
        public System.Threading.Tasks.Task<string> SendestimateDetailstoTrmsAsync(string AccessCode, string EstimationAutogenerate, string EstimateDate, double TotalWorkOrderCost, string autoreferencenumber, string offcode, string strLoggedUser, string Wodesc) {
            return base.Channel.SendestimateDetailstoTrmsAsync(AccessCode, EstimationAutogenerate, EstimateDate, TotalWorkOrderCost, autoreferencenumber, offcode, strLoggedUser, Wodesc);
        }
        
        public System.Data.DataSet Applicationdet(string autoreferencenumber) {
            return base.Channel.Applicationdet(autoreferencenumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ApplicationdetAsync(string autoreferencenumber) {
            return base.Channel.ApplicationdetAsync(autoreferencenumber);
        }
        
        public System.Data.DataSet TrmsConnection(string applicantrefid) {
            return base.Channel.TrmsConnection(applicantrefid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TrmsConnectionAsync(string applicantrefid) {
            return base.Channel.TrmsConnectionAsync(applicantrefid);
        }
        
        public string Savecrcomplete(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate) {
            return base.Channel.Savecrcomplete(wocrflag, trmsno, wonumber, wodate, estimatenumber, estimatedate, indentno, invoicenumber, woautorefid, indentdate);
        }
        
        public System.Threading.Tasks.Task<string> SavecrcompleteAsync(string wocrflag, string trmsno, string wonumber, string wodate, string estimatenumber, string estimatedate, string indentno, string invoicenumber, string woautorefid, string indentdate) {
            return base.Channel.SavecrcompleteAsync(wocrflag, trmsno, wonumber, wodate, estimatenumber, estimatedate, indentno, invoicenumber, woautorefid, indentdate);
        }
        
        public string[] UpdateJVSuccessStatus(string AccessCode, int JVTransId) {
            return base.Channel.UpdateJVSuccessStatus(AccessCode, JVTransId);
        }
        
        public System.Threading.Tasks.Task<string[]> UpdateJVSuccessStatusAsync(string AccessCode, int JVTransId) {
            return base.Channel.UpdateJVSuccessStatusAsync(AccessCode, JVTransId);
        }
        
        public System.Data.DataSet workorderwisebookedrpt(string fromdate, string todate, string divisionoff, string locationcode) {
            return base.Channel.workorderwisebookedrpt(fromdate, todate, divisionoff, locationcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> workorderwisebookedrptAsync(string fromdate, string todate, string divisionoff, string locationcode) {
            return base.Channel.workorderwisebookedrptAsync(fromdate, todate, divisionoff, locationcode);
        }
        
        public System.Data.DataTable GetWODetails(string AccessCode, string LocationCode) {
            return base.Channel.GetWODetails(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetWODetailsAsync(string AccessCode, string LocationCode) {
            return base.Channel.GetWODetailsAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetWODetailsForCRegister(string AccessCode, string LocationCode, string AccountCode) {
            return base.Channel.GetWODetailsForCRegister(AccessCode, LocationCode, AccountCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetWODetailsForCRegisterAsync(string AccessCode, string LocationCode, string AccountCode) {
            return base.Channel.GetWODetailsForCRegisterAsync(AccessCode, LocationCode, AccountCode);
        }
        
        public System.Data.DataSet GetPurchaseOrderNumber(string AccessCode, int VendorId, string LocationCode) {
            return base.Channel.GetPurchaseOrderNumber(AccessCode, VendorId, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPurchaseOrderNumberAsync(string AccessCode, int VendorId, string LocationCode) {
            return base.Channel.GetPurchaseOrderNumberAsync(AccessCode, VendorId, LocationCode);
        }
        
        public System.Data.DataSet GetRvNumber(string AccessCode, int PurchaseorderId) {
            return base.Channel.GetRvNumber(AccessCode, PurchaseorderId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRvNumberAsync(string AccessCode, int PurchaseorderId) {
            return base.Channel.GetRvNumberAsync(AccessCode, PurchaseorderId);
        }
        
        public System.Data.DataSet GetPoRVnumbers(string AccessCode, int VendorId, string LocationCode, int billid) {
            return base.Channel.GetPoRVnumbers(AccessCode, VendorId, LocationCode, billid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPoRVnumbersAsync(string AccessCode, int VendorId, string LocationCode, int billid) {
            return base.Channel.GetPoRVnumbersAsync(AccessCode, VendorId, LocationCode, billid);
        }
        
        public System.Data.DataSet FetchRvdetails(string AccessCode, int PurchaseorderId, string rv_id) {
            return base.Channel.FetchRvdetails(AccessCode, PurchaseorderId, rv_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchRvdetailsAsync(string AccessCode, int PurchaseorderId, string rv_id) {
            return base.Channel.FetchRvdetailsAsync(AccessCode, PurchaseorderId, rv_id);
        }
        
        public string[] SaveRvBill(string AccessCode, string jsonerializeddata, string bill_id, string poid) {
            return base.Channel.SaveRvBill(AccessCode, jsonerializeddata, bill_id, poid);
        }
        
        public System.Threading.Tasks.Task<string[]> SaveRvBillAsync(string AccessCode, string jsonerializeddata, string bill_id, string poid) {
            return base.Channel.SaveRvBillAsync(AccessCode, jsonerializeddata, bill_id, poid);
        }
        
        public System.Data.DataTable GetWOItemDetails(string AccessCode, string LocationCode, int WOId) {
            return base.Channel.GetWOItemDetails(AccessCode, LocationCode, WOId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetWOItemDetailsAsync(string AccessCode, string LocationCode, int WOId) {
            return base.Channel.GetWOItemDetailsAsync(AccessCode, LocationCode, WOId);
        }
        
        public System.Data.DataTable GetCollectionSource(string AccessCode, string LocationCode) {
            return base.Channel.GetCollectionSource(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCollectionSourceAsync(string AccessCode, string LocationCode) {
            return base.Channel.GetCollectionSourceAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetAccountCodeFromERP(string AccessCode, int LocCode) {
            return base.Channel.GetAccountCodeFromERP(AccessCode, LocCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAccountCodeFromERPAsync(string AccessCode, int LocCode) {
            return base.Channel.GetAccountCodeFromERPAsync(AccessCode, LocCode);
        }
        
        public System.Data.DataSet GetAnnexure22AB(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure22AB(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure22ABAsync(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure22ABAsync(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Data.DataSet GetAnnexure22ABCircle(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure22ABCircle(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure22ABCircleAsync(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure22ABCircleAsync(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Data.DataSet GetAnnexure40A(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure40A(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure40AAsync(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure40AAsync(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Data.DataSet GetAnnexure40B(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure40B(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure40BAsync(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure40BAsync(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Data.DataSet GetAnnexure30A(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure30A(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure30AAsync(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure30AAsync(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Data.DataSet GetAnnexure30(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure30(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAnnexure30Async(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetAnnexure30Async(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Data.DataTable TransferWork(string AccessCode, string LocCode, string AccountCode, string ActivityCode, string TransferDate) {
            return base.Channel.TransferWork(AccessCode, LocCode, AccountCode, ActivityCode, TransferDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TransferWorkAsync(string AccessCode, string LocCode, string AccountCode, string ActivityCode, string TransferDate) {
            return base.Channel.TransferWorkAsync(AccessCode, LocCode, AccountCode, ActivityCode, TransferDate);
        }
        
        public System.Data.DataSet GetBudgetAccountCode(string AccessCode, int LocationCode) {
            return base.Channel.GetBudgetAccountCode(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBudgetAccountCodeAsync(string AccessCode, int LocationCode) {
            return base.Channel.GetBudgetAccountCodeAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetSchemes(string AccessCode, int LocationCode) {
            return base.Channel.GetSchemes(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSchemesAsync(string AccessCode, int LocationCode) {
            return base.Channel.GetSchemesAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetProjects(string AccessCode, int LocationCode, int SchemeId) {
            return base.Channel.GetProjects(AccessCode, LocationCode, SchemeId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProjectsAsync(string AccessCode, int LocationCode, int SchemeId) {
            return base.Channel.GetProjectsAsync(AccessCode, LocationCode, SchemeId);
        }
        
        public System.Data.DataTable GetActivityCode(string AccessCode, int LocationCode) {
            return base.Channel.GetActivityCode(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetActivityCodeAsync(string AccessCode, int LocationCode) {
            return base.Channel.GetActivityCodeAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetVendor(string AccessCode, int LocationCode) {
            return base.Channel.GetVendor(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetVendorAsync(string AccessCode, int LocationCode) {
            return base.Channel.GetVendorAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetLCBGRefID(string AccessCode, int LocationCode, int VendorId) {
            return base.Channel.GetLCBGRefID(AccessCode, LocationCode, VendorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLCBGRefIDAsync(string AccessCode, int LocationCode, int VendorId) {
            return base.Channel.GetLCBGRefIDAsync(AccessCode, LocationCode, VendorId);
        }
        
        public System.Data.DataTable GetInsurenceRefID(string AccessCode, int LocationCode, int VendorId) {
            return base.Channel.GetInsurenceRefID(AccessCode, LocationCode, VendorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetInsurenceRefIDAsync(string AccessCode, int LocationCode, int VendorId) {
            return base.Channel.GetInsurenceRefIDAsync(AccessCode, LocationCode, VendorId);
        }
        
        public System.Data.DataTable GetLCBGInsurenceRefID(string AccessCode, int LocationCode, int VendorId) {
            return base.Channel.GetLCBGInsurenceRefID(AccessCode, LocationCode, VendorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetLCBGInsurenceRefIDAsync(string AccessCode, int LocationCode, int VendorId) {
            return base.Channel.GetLCBGInsurenceRefIDAsync(AccessCode, LocationCode, VendorId);
        }
        
        public System.Data.DataSet GetAccountCodeAndActivityCode(string AccessCode, int LocCode) {
            return base.Channel.GetAccountCodeAndActivityCode(AccessCode, LocCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountCodeAndActivityCodeAsync(string AccessCode, int LocCode) {
            return base.Channel.GetAccountCodeAndActivityCodeAsync(AccessCode, LocCode);
        }
        
        public System.Data.DataSet GetMasterForEstimate(string AccessCode, int LocationCode, string sKey, int VendorId) {
            return base.Channel.GetMasterForEstimate(AccessCode, LocationCode, sKey, VendorId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetMasterForEstimateAsync(string AccessCode, int LocationCode, string sKey, int VendorId) {
            return base.Channel.GetMasterForEstimateAsync(AccessCode, LocationCode, sKey, VendorId);
        }
        
        public bool CheckForBudgetLimit(string AccessCode, int LocationCode, string AccountCode, int ActivityCode, double Amount, string TransDate, int SchemeId, int ProjectId) {
            return base.Channel.CheckForBudgetLimit(AccessCode, LocationCode, AccountCode, ActivityCode, Amount, TransDate, SchemeId, ProjectId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckForBudgetLimitAsync(string AccessCode, int LocationCode, string AccountCode, int ActivityCode, double Amount, string TransDate, int SchemeId, int ProjectId) {
            return base.Channel.CheckForBudgetLimitAsync(AccessCode, LocationCode, AccountCode, ActivityCode, Amount, TransDate, SchemeId, ProjectId);
        }
        
        public System.Data.DataTable GetFMSUserDetail(string UserName, string UserPassword) {
            return base.Channel.GetFMSUserDetail(UserName, UserPassword);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFMSUserDetailAsync(string UserName, string UserPassword) {
            return base.Channel.GetFMSUserDetailAsync(UserName, UserPassword);
        }
        
        public System.Data.DataSet GetWODetailsAfterCR(string AccessCode, string LocationCode, int WOId, string FromDate, string AccountCode, string ToDate, string WONo) {
            return base.Channel.GetWODetailsAfterCR(AccessCode, LocationCode, WOId, FromDate, AccountCode, ToDate, WONo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWODetailsAfterCRAsync(string AccessCode, string LocationCode, int WOId, string FromDate, string AccountCode, string ToDate, string WONo) {
            return base.Channel.GetWODetailsAfterCRAsync(AccessCode, LocationCode, WOId, FromDate, AccountCode, ToDate, WONo);
        }
        
        public System.Data.DataTable GetPOItemDetails(string AccessCode, string LocationCode, int iPurchaseOrderId) {
            return base.Channel.GetPOItemDetails(AccessCode, LocationCode, iPurchaseOrderId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPOItemDetailsAsync(string AccessCode, string LocationCode, int iPurchaseOrderId) {
            return base.Channel.GetPOItemDetailsAsync(AccessCode, LocationCode, iPurchaseOrderId);
        }
        
        public System.Data.DataTable GetItemDetails(string AccessCode, string LocationCode) {
            return base.Channel.GetItemDetails(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetItemDetailsAsync(string AccessCode, string LocationCode) {
            return base.Channel.GetItemDetailsAsync(AccessCode, LocationCode);
        }
        
        public System.Data.DataTable GetWODetailsForCRegisterAbstract(string AccessCode, string LocationCode, int WOId, string FromDate, string ToDate, string AccountCode) {
            return base.Channel.GetWODetailsForCRegisterAbstract(AccessCode, LocationCode, WOId, FromDate, ToDate, AccountCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetWODetailsForCRegisterAbstractAsync(string AccessCode, string LocationCode, int WOId, string FromDate, string ToDate, string AccountCode) {
            return base.Channel.GetWODetailsForCRegisterAbstractAsync(AccessCode, LocationCode, WOId, FromDate, ToDate, AccountCode);
        }
        
        public System.Data.DataSet GetWODataForCWIPReport(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers) {
            return base.Channel.GetWODataForCWIPReport(AccessCode, LocationCode, AccountCode, WOFromDate, WOToDate, FMSStartDate, WoNumbers);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWODataForCWIPReportAsync(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers) {
            return base.Channel.GetWODataForCWIPReportAsync(AccessCode, LocationCode, AccountCode, WOFromDate, WOToDate, FMSStartDate, WoNumbers);
        }
        
        public System.Data.DataSet GetWODetailsForReports(string AccessCode, string LocationCode, string AccountCode, string Wonumbers) {
            return base.Channel.GetWODetailsForReports(AccessCode, LocationCode, AccountCode, Wonumbers);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWODetailsForReportsAsync(string AccessCode, string LocationCode, string AccountCode, string Wonumbers) {
            return base.Channel.GetWODetailsForReportsAsync(AccessCode, LocationCode, AccountCode, Wonumbers);
        }
        
        public System.Data.DataSet GetWOAfterCR(string AccessCode, string LocationCode) {
            return base.Channel.GetWOAfterCR(AccessCode, LocationCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWOAfterCRAsync(string AccessCode, string LocationCode) {
            return base.Channel.GetWOAfterCRAsync(AccessCode, LocationCode);
        }
        
        public string[] CheckReleaseEntry(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId) {
            return base.Channel.CheckReleaseEntry(AccessCode, LocationCode, AccountCode, ActivityCode, BalanceType, RIId);
        }
        
        public System.Threading.Tasks.Task<string[]> CheckReleaseEntryAsync(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId) {
            return base.Channel.CheckReleaseEntryAsync(AccessCode, LocationCode, AccountCode, ActivityCode, BalanceType, RIId);
        }
        
        public System.Data.DataTable GetReturnedDownValues(string AccessCode, string LocationCode, int RIId) {
            return base.Channel.GetReturnedDownValues(AccessCode, LocationCode, RIId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetReturnedDownValuesAsync(string AccessCode, string LocationCode, int RIId) {
            return base.Channel.GetReturnedDownValuesAsync(AccessCode, LocationCode, RIId);
        }
        
        public string[] CheckSpillOverWork(string wo_no, string wo_date, int locationcode, double amount, string source, string key, string acccode) {
            return base.Channel.CheckSpillOverWork(wo_no, wo_date, locationcode, amount, source, key, acccode);
        }
        
        public System.Threading.Tasks.Task<string[]> CheckSpillOverWorkAsync(string wo_no, string wo_date, int locationcode, double amount, string source, string key, string acccode) {
            return base.Channel.CheckSpillOverWorkAsync(wo_no, wo_date, locationcode, amount, source, key, acccode);
        }
        
        public string GetReleaseQty(string AccessCode, string LocationCode, int RIId, string ItemCode) {
            return base.Channel.GetReleaseQty(AccessCode, LocationCode, RIId, ItemCode);
        }
        
        public System.Threading.Tasks.Task<string> GetReleaseQtyAsync(string AccessCode, string LocationCode, int RIId, string ItemCode) {
            return base.Channel.GetReleaseQtyAsync(AccessCode, LocationCode, RIId, ItemCode);
        }
        
        public string[] UpdateAssetReleaseStatus(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId) {
            return base.Channel.UpdateAssetReleaseStatus(AccessCode, LocationCode, AccountCode, ActivityCode, BalanceType, RIId);
        }
        
        public System.Threading.Tasks.Task<string[]> UpdateAssetReleaseStatusAsync(string AccessCode, string LocationCode, string AccountCode, string ActivityCode, string BalanceType, int RIId) {
            return base.Channel.UpdateAssetReleaseStatusAsync(AccessCode, LocationCode, AccountCode, ActivityCode, BalanceType, RIId);
        }
        
        public string[] RejectJVTransaction(int MMSTransId, int JVTransId) {
            return base.Channel.RejectJVTransaction(MMSTransId, JVTransId);
        }
        
        public System.Threading.Tasks.Task<string[]> RejectJVTransactionAsync(int MMSTransId, int JVTransId) {
            return base.Channel.RejectJVTransactionAsync(MMSTransId, JVTransId);
        }
        
        public string[] SaveWDVValuesinMMS(string AccessCode, string AccountCode, string AccontCodeDesc, string ActivityCode, string BalanceType, int RIId, double WDVValue, string TransType) {
            return base.Channel.SaveWDVValuesinMMS(AccessCode, AccountCode, AccontCodeDesc, ActivityCode, BalanceType, RIId, WDVValue, TransType);
        }
        
        public System.Threading.Tasks.Task<string[]> SaveWDVValuesinMMSAsync(string AccessCode, string AccountCode, string AccontCodeDesc, string ActivityCode, string BalanceType, int RIId, double WDVValue, string TransType) {
            return base.Channel.SaveWDVValuesinMMSAsync(AccessCode, AccountCode, AccontCodeDesc, ActivityCode, BalanceType, RIId, WDVValue, TransType);
        }
        
        public System.Data.DataTable GetCrstatusDetails(string AccessCode, string LocationCode, string FromDate, string ToDate) {
            return base.Channel.GetCrstatusDetails(AccessCode, LocationCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetCrstatusDetailsAsync(string AccessCode, string LocationCode, string FromDate, string ToDate) {
            return base.Channel.GetCrstatusDetailsAsync(AccessCode, LocationCode, FromDate, ToDate);
        }
        
        public bool CheckOBMMSWorkOrderExist(string AccessCode, int LocationCode, string WorkOrderNo) {
            return base.Channel.CheckOBMMSWorkOrderExist(AccessCode, LocationCode, WorkOrderNo);
        }
        
        public System.Threading.Tasks.Task<bool> CheckOBMMSWorkOrderExistAsync(string AccessCode, int LocationCode, string WorkOrderNo) {
            return base.Channel.CheckOBMMSWorkOrderExistAsync(AccessCode, LocationCode, WorkOrderNo);
        }
        
        public string[] BillRegisterSave(
                    int BR_LocCode, 
                    string BR_Date, 
                    string BR_ManualBRNo, 
                    string BR_Narration, 
                    string jvnaration, 
                    string BR_ManualBRDate, 
                    string BR_BillCategory, 
                    int BR_BillType, 
                    string BR_BudgetACCode, 
                    double BR_BasicBill_Amount, 
                    double BR_Total_BillAmount, 
                    double BR_Net_BillAmount, 
                    string BR_JVDetails, 
                    int Bill_ID, 
                    System.Data.DataTable dtEmployeeDetails, 
                    string JVType) {
            return base.Channel.BillRegisterSave(BR_LocCode, BR_Date, BR_ManualBRNo, BR_Narration, jvnaration, BR_ManualBRDate, BR_BillCategory, BR_BillType, BR_BudgetACCode, BR_BasicBill_Amount, BR_Total_BillAmount, BR_Net_BillAmount, BR_JVDetails, Bill_ID, dtEmployeeDetails, JVType);
        }
        
        public System.Threading.Tasks.Task<string[]> BillRegisterSaveAsync(
                    int BR_LocCode, 
                    string BR_Date, 
                    string BR_ManualBRNo, 
                    string BR_Narration, 
                    string jvnaration, 
                    string BR_ManualBRDate, 
                    string BR_BillCategory, 
                    int BR_BillType, 
                    string BR_BudgetACCode, 
                    double BR_BasicBill_Amount, 
                    double BR_Total_BillAmount, 
                    double BR_Net_BillAmount, 
                    string BR_JVDetails, 
                    int Bill_ID, 
                    System.Data.DataTable dtEmployeeDetails, 
                    string JVType) {
            return base.Channel.BillRegisterSaveAsync(BR_LocCode, BR_Date, BR_ManualBRNo, BR_Narration, jvnaration, BR_ManualBRDate, BR_BillCategory, BR_BillType, BR_BudgetACCode, BR_BasicBill_Amount, BR_Total_BillAmount, BR_Net_BillAmount, BR_JVDetails, Bill_ID, dtEmployeeDetails, JVType);
        }
        
        public System.Data.DataSet GetWoInvoiceDetails(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetWoInvoiceDetails(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWoInvoiceDetailsAsync(string AccessCode, string LocCode, string FromDate, string ToDate) {
            return base.Channel.GetWoInvoiceDetailsAsync(AccessCode, LocCode, FromDate, ToDate);
        }
        
        public string[] HRMSAutoCashEntrySave(string DispersementDetails, string CreatedBy) {
            return base.Channel.HRMSAutoCashEntrySave(DispersementDetails, CreatedBy);
        }
        
        public System.Threading.Tasks.Task<string[]> HRMSAutoCashEntrySaveAsync(string DispersementDetails, string CreatedBy) {
            return base.Channel.HRMSAutoCashEntrySaveAsync(DispersementDetails, CreatedBy);
        }
        
        public System.Data.DataTable GetAssetAccountCodes() {
            return base.Channel.GetAssetAccountCodes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAssetAccountCodesAsync() {
            return base.Channel.GetAssetAccountCodesAsync();
        }
        
        public string[] TTKWorkorderSave(string AccessCode, string LocationCode, string OfficeCode, int WorkInspectionID, int Crby) {
            return base.Channel.TTKWorkorderSave(AccessCode, LocationCode, OfficeCode, WorkInspectionID, Crby);
        }
        
        public System.Threading.Tasks.Task<string[]> TTKWorkorderSaveAsync(string AccessCode, string LocationCode, string OfficeCode, int WorkInspectionID, int Crby) {
            return base.Channel.TTKWorkorderSaveAsync(AccessCode, LocationCode, OfficeCode, WorkInspectionID, Crby);
        }
        
        public string FetchWorkDetails() {
            return base.Channel.FetchWorkDetails();
        }
        
        public System.Threading.Tasks.Task<string> FetchWorkDetailsAsync() {
            return base.Channel.FetchWorkDetailsAsync();
        }
        
        public string CheckFaultContract(string msg) {
            return base.Channel.CheckFaultContract(msg);
        }
        
        public System.Threading.Tasks.Task<string> CheckFaultContractAsync(string msg) {
            return base.Channel.CheckFaultContractAsync(msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MMS_FMS.Integration.ERPService.UserLoginSuccess MMS_FMS.Integration.ERPService.IERPService.LoginUser(MMS_FMS.Integration.ERPService.UserLogin request) {
            return base.Channel.LoginUser(request);
        }
        
        public MMS_FMS.Integration.ERPService.User LoginUser(string Token, string UserName) {
            MMS_FMS.Integration.ERPService.UserLogin inValue = new MMS_FMS.Integration.ERPService.UserLogin();
            inValue.Token = Token;
            inValue.UserName = UserName;
            MMS_FMS.Integration.ERPService.UserLoginSuccess retVal = ((MMS_FMS.Integration.ERPService.IERPService)(this)).LoginUser(inValue);
            return retVal.User;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MMS_FMS.Integration.ERPService.UserLoginSuccess> MMS_FMS.Integration.ERPService.IERPService.LoginUserAsync(MMS_FMS.Integration.ERPService.UserLogin request) {
            return base.Channel.LoginUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<MMS_FMS.Integration.ERPService.UserLoginSuccess> LoginUserAsync(string Token, string UserName) {
            MMS_FMS.Integration.ERPService.UserLogin inValue = new MMS_FMS.Integration.ERPService.UserLogin();
            inValue.Token = Token;
            inValue.UserName = UserName;
            return ((MMS_FMS.Integration.ERPService.IERPService)(this)).LoginUserAsync(inValue);
        }
        
        public System.Data.DataSet GetWODataForCWIPSummaryReport(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers) {
            return base.Channel.GetWODataForCWIPSummaryReport(AccessCode, LocationCode, AccountCode, WOFromDate, WOToDate, FMSStartDate, WoNumbers);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetWODataForCWIPSummaryReportAsync(string AccessCode, string LocationCode, string AccountCode, string WOFromDate, string WOToDate, string FMSStartDate, string WoNumbers) {
            return base.Channel.GetWODataForCWIPSummaryReportAsync(AccessCode, LocationCode, AccountCode, WOFromDate, WOToDate, FMSStartDate, WoNumbers);
        }
        
        public string[] UpdateATDetials(string AccessCode, string LocationCode, string BRID) {
            return base.Channel.UpdateATDetials(AccessCode, LocationCode, BRID);
        }
        
        public System.Threading.Tasks.Task<string[]> UpdateATDetialsAsync(string AccessCode, string LocationCode, string BRID) {
            return base.Channel.UpdateATDetialsAsync(AccessCode, LocationCode, BRID);
        }
        
        public string[] CreateJVTransactionCWIPTransfer(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId) {
            return base.Channel.CreateJVTransactionCWIPTransfer(AccessCode, DebitAccountCode, CreditAccountCode, Amount, LocationCode, TransDate, Narration, SourceTransId, SourceDesc, JVTransId);
        }
        
        public System.Threading.Tasks.Task<string[]> CreateJVTransactionCWIPTransferAsync(string AccessCode, string DebitAccountCode, string CreditAccountCode, double Amount, int LocationCode, string TransDate, string Narration, int SourceTransId, string SourceDesc, int JVTransId) {
            return base.Channel.CreateJVTransactionCWIPTransferAsync(AccessCode, DebitAccountCode, CreditAccountCode, Amount, LocationCode, TransDate, Narration, SourceTransId, SourceDesc, JVTransId);
        }
    }
}
